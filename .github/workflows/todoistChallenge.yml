# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Todoist Challenge

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  RunningEslint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x]
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      # Install Node on the runner
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      # Install node_modules
      - name: Run Lint
        run: npm ci
      - run: npm run lint
      # Print current Node.js version
      - run: node --version
      # Print current npm version
      - run: npm --version
      # Print current Git version
      - run: git --version
      
  InstallingNewman:

    needs: RunningEslint
    runs-on: ubuntu-latest
      # Install Node on the runner
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      # Install the newman command line utility and also install the html extra reporter    
    steps:
      - name: Installing newman
        run: npm install newman
      - run: npm install newman-reporter-htmlextra
      # Make directory to upload the test results
      - name: Make Directory for results
        run: mkdir -p testResults

  RunPOSTMANcollection:

    needs: InstallingNewman
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      # Run POSTMAN collection
      - name: Testing API 
        run: npm run api-testing
      # Upload the contents of Test Results directory to workspace
      - name: Output the run Details
        uses: actions/upload-artifact@v2
        with:
          name: RunReports
          path: testResults
